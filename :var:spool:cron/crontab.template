#####################################################################
# MAIN DIRECTIVES
# For notes, syntax, etc., see DOCUMENTATION section below.


#####################################################################
# JOBS
# For notes, syntax, etc., see DOCUMENTATION section below.

#            W      C
#M           E      O
#I        M  E      M
#N  H     O  K      M
#U  O  D  N  D      A
#T  U  A  T  A      N
#E  R  Y  H  Y      D


# for root on SUSE*
#@hourly             /usr/bin/zypper ref >/dev/null 2>&1


#####################################################################
# DOCUMENTATION
# - https://tecadmin.net/crontab-in-linux-with-20-examples-of-cron-schedule/
# - https://linux.die.net/man/5/crontab
# - https://www.adminschoice.com/crontab-quick-reference
# 
# CRONTAB FILE CAVEATS
# ===================================================================
# 1. crontab files have to be regular files or symlinks to 
#    regular files.
# 1. crontab files must not be executable or writable by anyone 
#    else than the owner. 
#    - This requirement can be overridden by using the 
#      `-p` option on the `crond` command line. 
# 1. If `inotify` support is in use, changes in the `symlinked` 
#    crontabs are not automatically noticed by the cron daemon. 
# 1. The cron daemon must receive a `SIGHUP` to reload the crontabs.
#    This is a limitation of inotify API.
# 1. Environment variables (e.g. "${HOME}") can be set in the crontab. 
#    In BSD or ATT, the environment handed to child processes 
#    is basically the one from /etc/rc.
# 
# Environment Variables
# ------------------------------------------------------------------
# cron invokes the command from the user’s `$HOME` directory 
# with the shell, (/usr/bin/sh).
# 
# cron supplies a default environment for every shell, defining:
#   
#       Variable    | Description                   | Footnotes
#   :---------------|:------------------------------|:----------:  
#     `${HOME}`     | User’s home-directory         |    1
#     `${LOGNAME}`  | User’s login-id /username     |    2
#     `${USER}`     | Same as `${LOGNAME}` on BSD   |    2,3
#     `${PATH}`     | `/usr/bin:/usr/sbin:`         |
#     `${SHELL}`    | `/usr/bin/sh`                 |
#
# **Users who desire to have their `.profile` executed must 
#   explicitly do so in the crontab entry or in a script 
#   called by the entry.**
# 
#     Footnote  | Description
#   :----------:|:----------------------------------------------
#        1      | May be overridden at runtime by settings in
#               |   the crontab file.
#        2      | May **NOT** be overridden at runtime by 
#               |   settings in the crontab file.
#        3      | On these systems, `${USER}` will be set also.
#
#
#
# `MAILTO` Directive
# -------------------------------------------------------------------
# - Command output is mailed to the crontab owner (username) 
#   (BSD can't do this)
# - E.g.: `MAILTO=root`
# - ...but *can* be mailed to a person other than the crontab owner 
#   (SysV can't do this)
# - The feature can be turned off and no mail will be sent at all 
#   (SysV can't do this either).
# - The jobs in `cron.d` are system jobs, which are used 
#   usually for more than one user; this is the reason why the
#   username of the user needed. 
# - `MAILTO` on the first line is optional.
# - Multiple `MAILTO` directives can be listed.
#
# To disable email:
# By default cron jobs send an email to the user account executing 
# the cronjob. If this is not needed put the following command 
# At the end of the cron job line:
#       
#       >/dev/null 2>&1
#
# Log Files
# -------------------------------------------------------------------
# An example entry to collect the cron execution execution log in a file :
#   
#   30 18 * * * rm /home/user/tmp/* >> /home/user/logs/clean_tmp_dir.log
#
#
# File Locations
# -------------------------------------------------------------------
#       Path         | Description
#  :-----------------|:----------------------------------------------
#  /etc/anacrontab   | System crontab file for jobs like cron.daily, 
#                    |   weekly, monthly. 
#  /var/spool/cron/  | Typical place for storing users crontab.
#  /etc/cron.d/      | Stored system crontables.
#
#
#
# FIELDS
# ===================================================================
# Linux crontab has six fields. 
# - Fields 1-5 define the date and time of execution. 
# - The 6th field is the command or script to be executed.
#
# The Linux crontab fields, order and syntax are as follows:
#
#                   Minute: (00-59) 
#                     Hour: (00-23) 
#       Day (of the month): (01-31)
#      Month (of the year): (01-12)
#                  Weekday: (0-6; 0 == Sunday)
#   Command / script w args
#
# TIME META VALUES AND DIRECTIVES
# ===================================================================
# - Prefaced/left-padded zeros are acceptable (e.g. 0 == 00)
# - When specifying day of week, both day 0 and day 7 will be 
#   considered Sunday. BSD and ATT seem to disagree about this.
# - Lists and ranges are allowed to co-exist in the same field. 
#   "1-3,7-9" would be rejected by ATT or BSD cron; they want 
#   to see "1-3" or "7,8,9" ONLY.
# - Ranges can include "steps", so "1-9/2" is the same as 
#   "1,3,5,7,9".
#
#      Value  | Description
#   :--------:|:-----------------------------------------------------
#       *     | Match any/every time value (every min, hr, etc.)
#      n-n    | Range of time values (number -> number)
#     n,N-N   | Multiple values/ranges (comma separated)
#      */n    | Every n values (e.g. */10 == every 10 minutes)
#      n-N/n  | Range w/ steps (e.g. 1-9/2 == 1,3,5,7,9)
#    @yearly  | The first minute of every year ( "0 0 1 1 *" )
#   @annually | Same as @yearly
#   @monthly  | The first minute of every month ( "0 0 1 * *" )
#    @weekly  | The first minute of every week ( "0 0 * * 0" )
#    @daily   | The first minute of every day ( "0 0 * * *" )
#    @hourly  | The first minute of every hour ( "0 * * * *" )
#    @reboot  | Upon system start up
#
# TIME NAMES
# ===================================================================
# English names and their associated abrreviations for weekdays and
# months may also be used:
# - **Case sensitivity is unkown**.
# - 
#
# Weekdays
# -------------------------------------------------------------------
#     Number  | Abbreviation  | Full Name
#   :--------:|:-------------:|:------------
#       00    |      Sun      | Sunday
#       01    |      Mon      | Monday
#       02    |      Tue      | Tuesday
#       03    |      Wed      | Wednesday
#       04    |      Thu      | Thursday
#       05    |      Fri      | Friday
#       06    |      Sat      | Saturday
#
# Months
# -------------------------------------------------------------------
#     Number  | Abbreviation  | Full Name
#   :--------:|:-------------:|:------------
#       01    |      Jan      | January
#       02    |      Feb      | February
#       03    |      Mar      | March
#       04    |      Apr      | April
#       05    |      May      | May
#       06    |      Jun      | June
#       07    |      Jul      | July
#       08    |      Aug      | August
#       09    |      Sep      | September
#       10    |      Oct      | October
#       11    |      Nov      | November
#       12    |      Dec      | December


